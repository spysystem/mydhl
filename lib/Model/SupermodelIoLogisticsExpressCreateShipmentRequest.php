<?php
/**
 * SupermodelIoLogisticsExpressCreateShipmentRequest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  MyDHL
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DHL Express APIs (MyDHL API)
 *
 * Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.  Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services    In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments)
 *
 * The version of the OpenAPI document: 2.7.2
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace MyDHL\Model;

use \ArrayAccess;
use \MyDHL\ObjectSerializer;

/**
 * SupermodelIoLogisticsExpressCreateShipmentRequest Class Doc Comment
 *
 * @category Class
 * @package  MyDHL
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class SupermodelIoLogisticsExpressCreateShipmentRequest implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * Return an object with the Model Fields
      *
      * @return SupermodelIoLogisticsExpressCreateShipmentRequestModelFields
      */
    public static function GetModelFields(): SupermodelIoLogisticsExpressCreateShipmentRequestModelFields
    {
        return new SupermodelIoLogisticsExpressCreateShipmentRequestModelFields();
    }

    /**
      * Return an object with the Model Attributes
      *
      * @return SupermodelIoLogisticsExpressCreateShipmentRequestModelAttributes
      */
    public static function GetModelAttributes(): SupermodelIoLogisticsExpressCreateShipmentRequestModelAttributes
    {
        return new SupermodelIoLogisticsExpressCreateShipmentRequestModelAttributes();
    }

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'supermodelIoLogisticsExpressCreateShipmentRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'planned_shipping_date_and_time' => 'string',
        'pickup' => '\MyDHL\Model\Pickup',
        'product_code' => 'string',
        'local_product_code' => 'string',
        'get_rate_estimates' => 'bool',
        'accounts' => '\MyDHL\Model\SupermodelIoLogisticsExpressAccount[]',
        'value_added_services' => '\MyDHL\Model\SupermodelIoLogisticsExpressValueAddedServices[]',
        'output_image_properties' => '\MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties',
        'customer_references' => '\MyDHL\Model\SupermodelIoLogisticsExpressReference[]',
        'identifiers' => '\MyDHL\Model\SupermodelIoLogisticsExpressIdentifier[]',
        'customer_details' => '\MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestCustomerDetails',
        'content' => '\MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestContent',
        'document_images' => '\MyDHL\Model\SupermodelIoLogisticsExpressDocumentImagesInner[]',
        'on_demand_delivery' => '\MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestOnDemandDelivery',
        'request_ondemand_delivery_url' => 'bool',
        'shipment_notification' => '\MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestShipmentNotificationInner[]',
        'prepaid_charges' => '\MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestPrepaidChargesInner[]',
        'get_transliterated_response' => 'bool',
        'estimated_delivery_date' => '\MyDHL\Model\EstimatedDeliveryDate',
        'get_additional_information' => '\MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestGetAdditionalInformationInner[]',
        'parent_shipment' => '\MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestParentShipment'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'planned_shipping_date_and_time' => null,
        'pickup' => null,
        'product_code' => null,
        'local_product_code' => null,
        'get_rate_estimates' => null,
        'accounts' => null,
        'value_added_services' => null,
        'output_image_properties' => null,
        'customer_references' => null,
        'identifiers' => null,
        'customer_details' => null,
        'content' => null,
        'document_images' => null,
        'on_demand_delivery' => null,
        'request_ondemand_delivery_url' => null,
        'shipment_notification' => null,
        'prepaid_charges' => null,
        'get_transliterated_response' => null,
        'estimated_delivery_date' => null,
        'get_additional_information' => null,
        'parent_shipment' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'planned_shipping_date_and_time' => false,
		'pickup' => false,
		'product_code' => false,
		'local_product_code' => false,
		'get_rate_estimates' => false,
		'accounts' => false,
		'value_added_services' => false,
		'output_image_properties' => false,
		'customer_references' => false,
		'identifiers' => false,
		'customer_details' => false,
		'content' => false,
		'document_images' => false,
		'on_demand_delivery' => false,
		'request_ondemand_delivery_url' => false,
		'shipment_notification' => false,
		'prepaid_charges' => false,
		'get_transliterated_response' => false,
		'estimated_delivery_date' => false,
		'get_additional_information' => false,
		'parent_shipment' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'planned_shipping_date_and_time' => 'plannedShippingDateAndTime',
        'pickup' => 'pickup',
        'product_code' => 'productCode',
        'local_product_code' => 'localProductCode',
        'get_rate_estimates' => 'getRateEstimates',
        'accounts' => 'accounts',
        'value_added_services' => 'valueAddedServices',
        'output_image_properties' => 'outputImageProperties',
        'customer_references' => 'customerReferences',
        'identifiers' => 'identifiers',
        'customer_details' => 'customerDetails',
        'content' => 'content',
        'document_images' => 'documentImages',
        'on_demand_delivery' => 'onDemandDelivery',
        'request_ondemand_delivery_url' => 'requestOndemandDeliveryURL',
        'shipment_notification' => 'shipmentNotification',
        'prepaid_charges' => 'prepaidCharges',
        'get_transliterated_response' => 'getTransliteratedResponse',
        'estimated_delivery_date' => 'estimatedDeliveryDate',
        'get_additional_information' => 'getAdditionalInformation',
        'parent_shipment' => 'parentShipment'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'planned_shipping_date_and_time' => 'setPlannedShippingDateAndTime',
        'pickup' => 'setPickup',
        'product_code' => 'setProductCode',
        'local_product_code' => 'setLocalProductCode',
        'get_rate_estimates' => 'setGetRateEstimates',
        'accounts' => 'setAccounts',
        'value_added_services' => 'setValueAddedServices',
        'output_image_properties' => 'setOutputImageProperties',
        'customer_references' => 'setCustomerReferences',
        'identifiers' => 'setIdentifiers',
        'customer_details' => 'setCustomerDetails',
        'content' => 'setContent',
        'document_images' => 'setDocumentImages',
        'on_demand_delivery' => 'setOnDemandDelivery',
        'request_ondemand_delivery_url' => 'setRequestOndemandDeliveryUrl',
        'shipment_notification' => 'setShipmentNotification',
        'prepaid_charges' => 'setPrepaidCharges',
        'get_transliterated_response' => 'setGetTransliteratedResponse',
        'estimated_delivery_date' => 'setEstimatedDeliveryDate',
        'get_additional_information' => 'setGetAdditionalInformation',
        'parent_shipment' => 'setParentShipment'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'planned_shipping_date_and_time' => 'getPlannedShippingDateAndTime',
        'pickup' => 'getPickup',
        'product_code' => 'getProductCode',
        'local_product_code' => 'getLocalProductCode',
        'get_rate_estimates' => 'getGetRateEstimates',
        'accounts' => 'getAccounts',
        'value_added_services' => 'getValueAddedServices',
        'output_image_properties' => 'getOutputImageProperties',
        'customer_references' => 'getCustomerReferences',
        'identifiers' => 'getIdentifiers',
        'customer_details' => 'getCustomerDetails',
        'content' => 'getContent',
        'document_images' => 'getDocumentImages',
        'on_demand_delivery' => 'getOnDemandDelivery',
        'request_ondemand_delivery_url' => 'getRequestOndemandDeliveryUrl',
        'shipment_notification' => 'getShipmentNotification',
        'prepaid_charges' => 'getPrepaidCharges',
        'get_transliterated_response' => 'getGetTransliteratedResponse',
        'estimated_delivery_date' => 'getEstimatedDeliveryDate',
        'get_additional_information' => 'getGetAdditionalInformation',
        'parent_shipment' => 'getParentShipment'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('planned_shipping_date_and_time', $data ?? [], null);
        $this->setIfExists('pickup', $data ?? [], null);
        $this->setIfExists('product_code', $data ?? [], null);
        $this->setIfExists('local_product_code', $data ?? [], null);
        $this->setIfExists('get_rate_estimates', $data ?? [], false);
        $this->setIfExists('accounts', $data ?? [], null);
        $this->setIfExists('value_added_services', $data ?? [], null);
        $this->setIfExists('output_image_properties', $data ?? [], null);
        $this->setIfExists('customer_references', $data ?? [], null);
        $this->setIfExists('identifiers', $data ?? [], null);
        $this->setIfExists('customer_details', $data ?? [], null);
        $this->setIfExists('content', $data ?? [], null);
        $this->setIfExists('document_images', $data ?? [], null);
        $this->setIfExists('on_demand_delivery', $data ?? [], null);
        $this->setIfExists('request_ondemand_delivery_url', $data ?? [], null);
        $this->setIfExists('shipment_notification', $data ?? [], null);
        $this->setIfExists('prepaid_charges', $data ?? [], null);
        $this->setIfExists('get_transliterated_response', $data ?? [], null);
        $this->setIfExists('estimated_delivery_date', $data ?? [], null);
        $this->setIfExists('get_additional_information', $data ?? [], null);
        $this->setIfExists('parent_shipment', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['planned_shipping_date_and_time'] === null) {
            $invalidProperties[] = "'planned_shipping_date_and_time' can't be null";
        }
        if ((mb_strlen($this->container['planned_shipping_date_and_time']) > 29)) {
            $invalidProperties[] = "invalid value for 'planned_shipping_date_and_time', the character length must be smaller than or equal to 29.";
        }

        if ((mb_strlen($this->container['planned_shipping_date_and_time']) < 1)) {
            $invalidProperties[] = "invalid value for 'planned_shipping_date_and_time', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['pickup'] === null) {
            $invalidProperties[] = "'pickup' can't be null";
        }
        if ($this->container['product_code'] === null) {
            $invalidProperties[] = "'product_code' can't be null";
        }
        if ((mb_strlen($this->container['product_code']) > 6)) {
            $invalidProperties[] = "invalid value for 'product_code', the character length must be smaller than or equal to 6.";
        }

        if ((mb_strlen($this->container['product_code']) < 1)) {
            $invalidProperties[] = "invalid value for 'product_code', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['local_product_code']) && (mb_strlen($this->container['local_product_code']) > 3)) {
            $invalidProperties[] = "invalid value for 'local_product_code', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['local_product_code']) && (mb_strlen($this->container['local_product_code']) < 1)) {
            $invalidProperties[] = "invalid value for 'local_product_code', the character length must be bigger than or equal to 1.";
        }

        if ($this->container['accounts'] === null) {
            $invalidProperties[] = "'accounts' can't be null";
        }
        if ((count($this->container['accounts']) > 3)) {
            $invalidProperties[] = "invalid value for 'accounts', number of items must be less than or equal to 3.";
        }

        if ((count($this->container['accounts']) < 1)) {
            $invalidProperties[] = "invalid value for 'accounts', number of items must be greater than or equal to 1.";
        }

        if (!is_null($this->container['value_added_services']) && (count($this->container['value_added_services']) > 99)) {
            $invalidProperties[] = "invalid value for 'value_added_services', number of items must be less than or equal to 99.";
        }

        if (!is_null($this->container['customer_references']) && (count($this->container['customer_references']) > 999)) {
            $invalidProperties[] = "invalid value for 'customer_references', number of items must be less than or equal to 999.";
        }

        if (!is_null($this->container['identifiers']) && (count($this->container['identifiers']) > 5)) {
            $invalidProperties[] = "invalid value for 'identifiers', number of items must be less than or equal to 5.";
        }

        if ($this->container['customer_details'] === null) {
            $invalidProperties[] = "'customer_details' can't be null";
        }
        if ($this->container['content'] === null) {
            $invalidProperties[] = "'content' can't be null";
        }
        if (!is_null($this->container['document_images']) && (count($this->container['document_images']) > 999)) {
            $invalidProperties[] = "invalid value for 'document_images', number of items must be less than or equal to 999.";
        }

        if (!is_null($this->container['document_images']) && (count($this->container['document_images']) < 1)) {
            $invalidProperties[] = "invalid value for 'document_images', number of items must be greater than or equal to 1.";
        }

        if (!is_null($this->container['shipment_notification']) && (count($this->container['shipment_notification']) > 5)) {
            $invalidProperties[] = "invalid value for 'shipment_notification', number of items must be less than or equal to 5.";
        }

        if (!is_null($this->container['prepaid_charges']) && (count($this->container['prepaid_charges']) > 1)) {
            $invalidProperties[] = "invalid value for 'prepaid_charges', number of items must be less than or equal to 1.";
        }

        if (!is_null($this->container['get_additional_information']) && (count($this->container['get_additional_information']) > 3)) {
            $invalidProperties[] = "invalid value for 'get_additional_information', number of items must be less than or equal to 3.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets planned_shipping_date_and_time
     *
     * @return string
     */
    public function getPlannedShippingDateAndTime()
    {
        return $this->container['planned_shipping_date_and_time'];
    }

    /**
     * Sets planned_shipping_date_and_time
     *
     * @param string $planned_shipping_date_and_time Identifies the date and time the package is tendered. Both the date and time portions of the string are expected to be used. The date should not be a past date or a date more than 10 days in the future. The time is the local time of the shipment based on the shipper's time zone. The date component must be in the format: YYYY-MM-DD; the time component must be in the format: HH:MM:SS using a 24 hour clock. The date and time parts are separated by the letter T (e.g. 2006-06-26T17:00:00 GMT+01:00).
     *
     * @return self
     */
    public function setPlannedShippingDateAndTime($planned_shipping_date_and_time)
    {
        if (is_null($planned_shipping_date_and_time)) {
            throw new \InvalidArgumentException('non-nullable planned_shipping_date_and_time cannot be null');
        }
        if ((mb_strlen($planned_shipping_date_and_time) > 29)) {
            throw new \InvalidArgumentException('invalid length for $planned_shipping_date_and_time when calling SupermodelIoLogisticsExpressCreateShipmentRequest., must be smaller than or equal to 29.');
        }
        if ((mb_strlen($planned_shipping_date_and_time) < 1)) {
            throw new \InvalidArgumentException('invalid length for $planned_shipping_date_and_time when calling SupermodelIoLogisticsExpressCreateShipmentRequest., must be bigger than or equal to 1.');
        }

        $this->container['planned_shipping_date_and_time'] = $planned_shipping_date_and_time;

        return $this;
    }

    /**
     * Gets pickup
     *
     * @return \MyDHL\Model\Pickup
     */
    public function getPickup()
    {
        return $this->container['pickup'];
    }

    /**
     * Sets pickup
     *
     * @param \MyDHL\Model\Pickup $pickup pickup
     *
     * @return self
     */
    public function setPickup($pickup)
    {
        if (is_null($pickup)) {
            throw new \InvalidArgumentException('non-nullable pickup cannot be null');
        }
        $this->container['pickup'] = $pickup;

        return $this;
    }

    /**
     * Gets product_code
     *
     * @return string
     */
    public function getProductCode()
    {
        return $this->container['product_code'];
    }

    /**
     * Sets product_code
     *
     * @param string $product_code Please enter DHL Express Global Product code
     *
     * @return self
     */
    public function setProductCode($product_code)
    {
        if (is_null($product_code)) {
            throw new \InvalidArgumentException('non-nullable product_code cannot be null');
        }
        if ((mb_strlen($product_code) > 6)) {
            throw new \InvalidArgumentException('invalid length for $product_code when calling SupermodelIoLogisticsExpressCreateShipmentRequest., must be smaller than or equal to 6.');
        }
        if ((mb_strlen($product_code) < 1)) {
            throw new \InvalidArgumentException('invalid length for $product_code when calling SupermodelIoLogisticsExpressCreateShipmentRequest., must be bigger than or equal to 1.');
        }

        $this->container['product_code'] = $product_code;

        return $this;
    }

    /**
     * Gets local_product_code
     *
     * @return string|null
     */
    public function getLocalProductCode()
    {
        return $this->container['local_product_code'];
    }

    /**
     * Sets local_product_code
     *
     * @param string|null $local_product_code Please enter DHL Express Local Product code. Important when shipping domestic products.
     *
     * @return self
     */
    public function setLocalProductCode($local_product_code)
    {
        if (is_null($local_product_code)) {
            throw new \InvalidArgumentException('non-nullable local_product_code cannot be null');
        }
        if ((mb_strlen($local_product_code) > 3)) {
            throw new \InvalidArgumentException('invalid length for $local_product_code when calling SupermodelIoLogisticsExpressCreateShipmentRequest., must be smaller than or equal to 3.');
        }
        if ((mb_strlen($local_product_code) < 1)) {
            throw new \InvalidArgumentException('invalid length for $local_product_code when calling SupermodelIoLogisticsExpressCreateShipmentRequest., must be bigger than or equal to 1.');
        }

        $this->container['local_product_code'] = $local_product_code;

        return $this;
    }

    /**
     * Gets get_rate_estimates
     *
     * @return bool|null
     */
    public function getGetRateEstimates()
    {
        return $this->container['get_rate_estimates'];
    }

    /**
     * Sets get_rate_estimates
     *
     * @param bool|null $get_rate_estimates Please advise if you want to get rate estimates for given shipment
     *
     * @return self
     */
    public function setGetRateEstimates($get_rate_estimates)
    {
        if (is_null($get_rate_estimates)) {
            throw new \InvalidArgumentException('non-nullable get_rate_estimates cannot be null');
        }
        $this->container['get_rate_estimates'] = $get_rate_estimates;

        return $this;
    }

    /**
     * Gets accounts
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressAccount[]
     */
    public function getAccounts()
    {
        return $this->container['accounts'];
    }

    /**
     * Sets accounts
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressAccount[] $accounts Please enter all the DHL Express accounts and types to be used for this shipment
     *
     * @return self
     */
    public function setAccounts($accounts)
    {
        if (is_null($accounts)) {
            throw new \InvalidArgumentException('non-nullable accounts cannot be null');
        }

        if ((count($accounts) > 3)) {
            throw new \InvalidArgumentException('invalid value for $accounts when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be less than or equal to 3.');
        }
        if ((count($accounts) < 1)) {
            throw new \InvalidArgumentException('invalid length for $accounts when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be greater than or equal to 1.');
        }
        $this->container['accounts'] = $accounts;

        return $this;
    }

    /**
     * Gets value_added_services
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressValueAddedServices[]|null
     */
    public function getValueAddedServices()
    {
        return $this->container['value_added_services'];
    }

    /**
     * Sets value_added_services
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressValueAddedServices[]|null $value_added_services This section communicates additional shipping services, such as Insurance (or Shipment Value Protection).
     *
     * @return self
     */
    public function setValueAddedServices($value_added_services)
    {
        if (is_null($value_added_services)) {
            throw new \InvalidArgumentException('non-nullable value_added_services cannot be null');
        }

        if ((count($value_added_services) > 99)) {
            throw new \InvalidArgumentException('invalid value for $value_added_services when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be less than or equal to 99.');
        }
        $this->container['value_added_services'] = $value_added_services;

        return $this;
    }

    /**
     * Gets output_image_properties
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties|null
     */
    public function getOutputImageProperties()
    {
        return $this->container['output_image_properties'];
    }

    /**
     * Sets output_image_properties
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties|null $output_image_properties output_image_properties
     *
     * @return self
     */
    public function setOutputImageProperties($output_image_properties)
    {
        if (is_null($output_image_properties)) {
            throw new \InvalidArgumentException('non-nullable output_image_properties cannot be null');
        }
        $this->container['output_image_properties'] = $output_image_properties;

        return $this;
    }

    /**
     * Gets customer_references
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressReference[]|null
     */
    public function getCustomerReferences()
    {
        return $this->container['customer_references'];
    }

    /**
     * Sets customer_references
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressReference[]|null $customer_references Here you can declare your customer references
     *
     * @return self
     */
    public function setCustomerReferences($customer_references)
    {
        if (is_null($customer_references)) {
            throw new \InvalidArgumentException('non-nullable customer_references cannot be null');
        }

        if ((count($customer_references) > 999)) {
            throw new \InvalidArgumentException('invalid value for $customer_references when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be less than or equal to 999.');
        }
        $this->container['customer_references'] = $customer_references;

        return $this;
    }

    /**
     * Gets identifiers
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressIdentifier[]|null
     */
    public function getIdentifiers()
    {
        return $this->container['identifiers'];
    }

    /**
     * Sets identifiers
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressIdentifier[]|null $identifiers Identifiers section is on the shipment level where you can optionaly provide a DHL Express waybill number. This has to be enabled by your DHL Express IT contact.
     *
     * @return self
     */
    public function setIdentifiers($identifiers)
    {
        if (is_null($identifiers)) {
            throw new \InvalidArgumentException('non-nullable identifiers cannot be null');
        }

        if ((count($identifiers) > 5)) {
            throw new \InvalidArgumentException('invalid value for $identifiers when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be less than or equal to 5.');
        }
        $this->container['identifiers'] = $identifiers;

        return $this;
    }

    /**
     * Gets customer_details
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestCustomerDetails
     */
    public function getCustomerDetails()
    {
        return $this->container['customer_details'];
    }

    /**
     * Sets customer_details
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestCustomerDetails $customer_details customer_details
     *
     * @return self
     */
    public function setCustomerDetails($customer_details)
    {
        if (is_null($customer_details)) {
            throw new \InvalidArgumentException('non-nullable customer_details cannot be null');
        }
        $this->container['customer_details'] = $customer_details;

        return $this;
    }

    /**
     * Gets content
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestContent
     */
    public function getContent()
    {
        return $this->container['content'];
    }

    /**
     * Sets content
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestContent $content content
     *
     * @return self
     */
    public function setContent($content)
    {
        if (is_null($content)) {
            throw new \InvalidArgumentException('non-nullable content cannot be null');
        }
        $this->container['content'] = $content;

        return $this;
    }

    /**
     * Gets document_images
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressDocumentImagesInner[]|null
     */
    public function getDocumentImages()
    {
        return $this->container['document_images'];
    }

    /**
     * Sets document_images
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressDocumentImagesInner[]|null $document_images This section is to support multiple base64 encoded string with the image of export documentation for Paperless Trade images. When an invalid base64 encoded string is provided, an error message will be returned
     *
     * @return self
     */
    public function setDocumentImages($document_images)
    {
        if (is_null($document_images)) {
            throw new \InvalidArgumentException('non-nullable document_images cannot be null');
        }

        if ((count($document_images) > 999)) {
            throw new \InvalidArgumentException('invalid value for $document_images when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be less than or equal to 999.');
        }
        if ((count($document_images) < 1)) {
            throw new \InvalidArgumentException('invalid length for $document_images when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be greater than or equal to 1.');
        }
        $this->container['document_images'] = $document_images;

        return $this;
    }

    /**
     * Gets on_demand_delivery
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestOnDemandDelivery|null
     */
    public function getOnDemandDelivery()
    {
        return $this->container['on_demand_delivery'];
    }

    /**
     * Sets on_demand_delivery
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestOnDemandDelivery|null $on_demand_delivery on_demand_delivery
     *
     * @return self
     */
    public function setOnDemandDelivery($on_demand_delivery)
    {
        if (is_null($on_demand_delivery)) {
            throw new \InvalidArgumentException('non-nullable on_demand_delivery cannot be null');
        }
        $this->container['on_demand_delivery'] = $on_demand_delivery;

        return $this;
    }

    /**
     * Gets request_ondemand_delivery_url
     *
     * @return bool|null
     */
    public function getRequestOndemandDeliveryUrl()
    {
        return $this->container['request_ondemand_delivery_url'];
    }

    /**
     * Sets request_ondemand_delivery_url
     *
     * @param bool|null $request_ondemand_delivery_url Determines whether to request the On Demand Delivery (ODD) link. When set to true it will provide an URL link for the specified Waybill Number, Shipper Account Number. The default value is false, no ODD link URL is provided in the response message.
     *
     * @return self
     */
    public function setRequestOndemandDeliveryUrl($request_ondemand_delivery_url)
    {
        if (is_null($request_ondemand_delivery_url)) {
            throw new \InvalidArgumentException('non-nullable request_ondemand_delivery_url cannot be null');
        }
        $this->container['request_ondemand_delivery_url'] = $request_ondemand_delivery_url;

        return $this;
    }

    /**
     * Gets shipment_notification
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestShipmentNotificationInner[]|null
     */
    public function getShipmentNotification()
    {
        return $this->container['shipment_notification'];
    }

    /**
     * Sets shipment_notification
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestShipmentNotificationInner[]|null $shipment_notification This is to support sending email notification once the shipment is created. The email will contain the basic information on the shipper, recipient, waybill number, and shipment information
     *
     * @return self
     */
    public function setShipmentNotification($shipment_notification)
    {
        if (is_null($shipment_notification)) {
            throw new \InvalidArgumentException('non-nullable shipment_notification cannot be null');
        }

        if ((count($shipment_notification) > 5)) {
            throw new \InvalidArgumentException('invalid value for $shipment_notification when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be less than or equal to 5.');
        }
        $this->container['shipment_notification'] = $shipment_notification;

        return $this;
    }

    /**
     * Gets prepaid_charges
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestPrepaidChargesInner[]|null
     */
    public function getPrepaidCharges()
    {
        return $this->container['prepaid_charges'];
    }

    /**
     * Sets prepaid_charges
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestPrepaidChargesInner[]|null $prepaid_charges Please provide any charges you have already paid for this shipment, like freight paid upfront. To allow using this section please contact your DHL Express representative
     *
     * @return self
     */
    public function setPrepaidCharges($prepaid_charges)
    {
        if (is_null($prepaid_charges)) {
            throw new \InvalidArgumentException('non-nullable prepaid_charges cannot be null');
        }

        if ((count($prepaid_charges) > 1)) {
            throw new \InvalidArgumentException('invalid value for $prepaid_charges when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be less than or equal to 1.');
        }
        $this->container['prepaid_charges'] = $prepaid_charges;

        return $this;
    }

    /**
     * Gets get_transliterated_response
     *
     * @return bool|null
     */
    public function getGetTransliteratedResponse()
    {
        return $this->container['get_transliterated_response'];
    }

    /**
     * Sets get_transliterated_response
     *
     * @param bool|null $get_transliterated_response If set to true, response will return transliterated text of shipper and receiver details.
     *
     * @return self
     */
    public function setGetTransliteratedResponse($get_transliterated_response)
    {
        if (is_null($get_transliterated_response)) {
            throw new \InvalidArgumentException('non-nullable get_transliterated_response cannot be null');
        }
        $this->container['get_transliterated_response'] = $get_transliterated_response;

        return $this;
    }

    /**
     * Gets estimated_delivery_date
     *
     * @return \MyDHL\Model\EstimatedDeliveryDate|null
     */
    public function getEstimatedDeliveryDate()
    {
        return $this->container['estimated_delivery_date'];
    }

    /**
     * Sets estimated_delivery_date
     *
     * @param \MyDHL\Model\EstimatedDeliveryDate|null $estimated_delivery_date estimated_delivery_date
     *
     * @return self
     */
    public function setEstimatedDeliveryDate($estimated_delivery_date)
    {
        if (is_null($estimated_delivery_date)) {
            throw new \InvalidArgumentException('non-nullable estimated_delivery_date cannot be null');
        }
        $this->container['estimated_delivery_date'] = $estimated_delivery_date;

        return $this;
    }

    /**
     * Gets get_additional_information
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestGetAdditionalInformationInner[]|null
     */
    public function getGetAdditionalInformation()
    {
        return $this->container['get_additional_information'];
    }

    /**
     * Sets get_additional_information
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestGetAdditionalInformationInner[]|null $get_additional_information Provides additional information in the response like service area details, routing code and pickup-related information
     *
     * @return self
     */
    public function setGetAdditionalInformation($get_additional_information)
    {
        if (is_null($get_additional_information)) {
            throw new \InvalidArgumentException('non-nullable get_additional_information cannot be null');
        }

        if ((count($get_additional_information) > 3)) {
            throw new \InvalidArgumentException('invalid value for $get_additional_information when calling SupermodelIoLogisticsExpressCreateShipmentRequest., number of items must be less than or equal to 3.');
        }
        $this->container['get_additional_information'] = $get_additional_information;

        return $this;
    }

    /**
     * Gets parent_shipment
     *
     * @return \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestParentShipment|null
     */
    public function getParentShipment()
    {
        return $this->container['parent_shipment'];
    }

    /**
     * Sets parent_shipment
     *
     * @param \MyDHL\Model\SupermodelIoLogisticsExpressCreateShipmentRequestParentShipment|null $parent_shipment parent_shipment
     *
     * @return self
     */
    public function setParentShipment($parent_shipment)
    {
        if (is_null($parent_shipment)) {
            throw new \InvalidArgumentException('non-nullable parent_shipment cannot be null');
        }
        $this->container['parent_shipment'] = $parent_shipment;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return (string)json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


